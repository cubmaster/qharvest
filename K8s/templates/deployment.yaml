apiVersion: apps/v1
kind: Deployment
metadata:
  name: enterprise-gateway
  namespace: { { .Values.namespace | quote } }
  labels:
    gateway-selector: enterprise-gateway
    app: enterprise-gateway
    component: enterprise-gateway
spec:
  # Uncomment/Update to deploy multiple replicas of EG
  replicas: 1
  selector:
    matchLabels:
      gateway-selector: enterprise-gateway
      app: enterprise-gateway
      component: enterprise-gateway
  template:
    metadata:
      labels:
        gateway-selector: enterprise-gateway
        app: enterprise-gateway
        component: enterprise-gateway
    spec:
      # Created above.
      serviceAccountName: enterprise-gateway-sa
      volumes:
        - name: dockersock
          hostPath:
            path: /var/run/docker.sock
      containers:
        - env:

            - name: EG_REMOVE_CONTAINER
              value: 'False'
              # Created above.
            - name: EG_NAMESPACE
              value: { { .Values.namespace | quote } }

              # Created above.  Used if no KERNEL_NAMESPACE is provided by client.
            - name: EG_KERNEL_CLUSTER_ROLE
              value: "kernel-controller"

              # All kernels reside in the EG namespace if True, otherwise KERNEL_NAMESPACE
              # must be provided or one will be created for each kernel.
            - name: EG_SHARED_NAMESPACE
              value: 'True'
            - name: KG_ALLOW_ORIGIN
              value: '*'
            - name: KG_ALLOW_METHODS
              value: '*'
            - name: KG_ALLOW_HEADERS
              value: '*'
            - name: KG_ALLOW_CREDENTIALS
              value: 'True'
            - name: KG_LIST_KERNELS
              value: 'True'
            - name: EG_TUNNELING_ENABLED
              value: "False"
            - name: EG_CULL_IDLE_TIMEOUT
              value: "600"
            - name: EG_LOG_LEVEL
              value: "DEBUG"
            - name: EG_KERNEL_LAUNCH_TIMEOUT
              value: "60"
            - name: EG_KERNEL_WHITELIST
              value: "['r_kubernetes','python_kubernetes','python_tf_kubernetes','scala_kubernetes','spark_r_kubernetes','spark_python_kubernetes','spark_scala_kubernetes']"
          # Ensure the following VERSION tag is updated to the version of Enterprise Gateway you wish to run
          image: elyra/enterprise-gateway:3.2.0
          # k8s will only pull :latest all the time.
          # the following line will make sure that :VERSION is always pulled
          # You should remove this if you want to pin EG to a release tag
          imagePullPolicy: Always
          name: enterprise-gateway
          #args: ["--gateway"]
          ports:
            - containerPort: 8888
