{
  "cells": [
    {
      "id": "init",
      "cell_type": "code",
      "execution_count": 0,
      "metadata": {
        "type": "initialize",
        "results": []
      },
      "outputs": [],
      "source": [
        "import pandas as pd\n",
        "import json\n",
        "pd.set_option('display.max_rows', None)\n",
        "pd.set_option('display.max_columns', None)\n",
        "pd.set_option('display.width', 2000)\n",
        "pd.set_option('display.float_format', '{:20,.2f}'.format)\n",
        "pd.set_option('display.max_colwidth', None)\n",
        "pd.set_option('display.max_colwidth', None)\n",
        "\n"
      ]
    },
    {
      "source": [
        "def dupcolumn(target):\n",
        "    dataFrame =  globals()[target['dataFrame']]\n",
        "    column = target['column']\n",
        "    new_column = column + '_copy'\n",
        "    result = dataFrame.assign(**{new_column: dataFrame[column]})\n",
        "    return result\n",
        "\n"
      ],
      "outputs": [],
      "metadata": {
        "type": "function",
        "ui": "duplicate column",
        "name": "dupcolumn",
        "icon": "layout-sidebar-inset",
        "results": [
          {
            "key": "result",
            "value": "0",
            "type": "dataframe"
          }
        ],
        "inputs": [
          {
            "key": "target",
            "value": "",
            "type": "column"
          }
        ]
      },
      "cell_type": "code",
      "execution_count": 0,
      "id": "add"
    },
    {
      "source": [
        "def append(df1,df2):\n",
        " result = pd.concat([df1,df2])\n",
        " return result\n",
        "\n"
      ],
      "outputs": [],
      "metadata": {
        "type": "function",
        "ui": "Append",
        "name": "append",
        "icon": "file-earmark-plus",
        "results": [
          {
            "key": "result",
            "value": "",
            "type": "dataframe"
          }
        ],
        "inputs": [
          {
            "key": "df1",
            "value": "",
            "type": "dataframe"
          },
          {
            "key": "df2",
            "value": "",
            "type": "dataframe"
          }
        ]
      },
      "cell_type": "code",
      "execution_count": 0,
      "id": "append_function"
    },
    {
      "source": [
        "def download(url,delimiter):\n",
        "  df = pd.read_csv(url,sep=delimiter)\n",
        "  return df\n",
        "  \n"
      ],
      "outputs": [],
      "metadata": {
        "type": "function",
        "ui": "download",
        "name": "download",
        "icon": "download",
        "results": [
          {
            "key": "result",
            "value": "",
            "type": "dataframe"
          }
        ],
        "inputs": [
          {
            "key": "url",
            "value": "'https://data.cityofnewyork.us/api/views/kku6-nxdu/rows.csv?accessType=DOWNLOAD'",
            "type": "text"
          },
          {
            "key": "delimiter",
            "value": "','",
            "type": "text"
          }
        ]
      },
      "cell_type": "code",
      "execution_count": 0,
      "id": "download_function"
    }
  ],
  "metadata": {
    "kernelspec": {
      "display_name": "Python 3 (ipykernel)",
      "language": "python",
      "name": "python3"
    },
    "language_info": {
      "codemirror_mode": {
        "name": "ipython",
        "version": 3
      },
      "file_extension": ".py",
      "mimetype": "text/x-python",
      "name": "python",
      "nbconvert_exporter": "python",
      "pygments_lexer": "ipython3",
      "version": "3.9.7"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 5
}
